#ifndef BRICKS_ARGLIST_COUNT
#error Use arglist.h
#endif

#if BRICKS_ARGLIST_COUNT == 0
#define BRICKS_ARGLIST_COMMA
#else
#define BRICKS_ARGLIST_COMMA ,
#endif

#define BRICKS_ARGLIST_ENUM_0(m, ...)
#define BRICKS_ARGLIST_ENUM_1(m, ...) m(1, __VA_ARGS__)
#define BRICKS_ARGLIST_ENUM_2(m, ...) BRICKS_ARGLIST_ENUM_1(m, __VA_ARGS__), m(2, __VA_ARGS__)
#define BRICKS_ARGLIST_ENUM_3(m, ...) BRICKS_ARGLIST_ENUM_2(m, __VA_ARGS__), m(3, __VA_ARGS__)
#define BRICKS_ARGLIST_ENUM_4(m, ...) BRICKS_ARGLIST_ENUM_3(m, __VA_ARGS__), m(4, __VA_ARGS__)
#define BRICKS_ARGLIST_ENUM_5(m, ...) BRICKS_ARGLIST_ENUM_4(m, __VA_ARGS__), m(5, __VA_ARGS__)
#define BRICKS_ARGLIST_ENUM_6(m, ...) BRICKS_ARGLIST_ENUM_5(m, __VA_ARGS__), m(6, __VA_ARGS__)
#define BRICKS_ARGLIST_ENUM_7(m, ...) BRICKS_ARGLIST_ENUM_6(m, __VA_ARGS__), m(7, __VA_ARGS__)
#define BRICKS_ARGLIST_ENUM_8(m, ...) BRICKS_ARGLIST_ENUM_7(m, __VA_ARGS__), m(8, __VA_ARGS__)
#define BRICKS_ARGLIST_ENUM_9(m, ...) BRICKS_ARGLIST_ENUM_8(m, __VA_ARGS__), m(9, __VA_ARGS__)

#define BRICKS_ARGLIST_ENUM(count, value) BRICKS_ARGLIST_ENUM_(count, value)
#define BRICKS_ARGLIST_ENUM2(count, value1, value2) BRICKS_ARGLIST_ENUM2_(count, value1, value2)
#define BRICKS_ARGLIST_ENUM_(count, value) BRICKS_ARGLIST_ENUM_ ## count(BRICKS_ARGLIST_ENUM_METHOD_1, value)
#define BRICKS_ARGLIST_ENUM2_(count, value1, value2) BRICKS_ARGLIST_ENUM_ ## count(BRICKS_ARGLIST_ENUM_METHOD_2, value1, value2)
#define BRICKS_ARGLIST_ENUM_METHOD_1(n, v) v ## n
#define BRICKS_ARGLIST_ENUM_METHOD_2(n, v1, v2) v1 ## n v2 ## n

#ifndef BRICKS_ARGLIST_TYPENAMES
#define BRICKS_ARGLIST_FREE_TYPENAMES
#define BRICKS_ARGLIST_TYPENAMES BRICKS_ARGLIST_ENUM(BRICKS_ARGLIST_COUNT, typename T)
#endif
#ifndef BRICKS_ARGLIST_TYPES
#define BRICKS_ARGLIST_FREE_TYPES
#define BRICKS_ARGLIST_TYPES BRICKS_ARGLIST_ENUM(BRICKS_ARGLIST_COUNT, T)
#endif
#ifndef BRICKS_ARGLIST_TYPES_NAMES
#define BRICKS_ARGLIST_FREE_TYPES_NAMES
#define BRICKS_ARGLIST_TYPES_NAMES BRICKS_ARGLIST_ENUM2(BRICKS_ARGLIST_COUNT, T, arg)
#endif
#ifndef BRICKS_ARGLIST_ARGS
#define BRICKS_ARGLIST_FREE_ARGS
#define BRICKS_ARGLIST_ARGS BRICKS_ARGLIST_ENUM(BRICKS_ARGLIST_COUNT, arg)
#endif

#include BRICKS_ARGLIST_HEADER

#undef BRICKS_ARGLIST_TYPES_NAME
#undef BRICKS_ARGLIST_ARGS_NAME

#undef BRICKS_ARGLIST_COMMA
#undef BRICKS_ARGLIST_ENUM
#undef BRICKS_ARGLIST_ENUM2
#undef BRICKS_ARGLIST_ENUM_
#undef BRICKS_ARGLIST_ENUM2_
#undef BRICKS_ARGLIST_ENUM_METHOD_1
#undef BRICKS_ARGLIST_ENUM_METHOD_2
#ifdef BRICKS_ARGLIST_FREE_TYPENAMES
#undef BRICKS_ARGLIST_TYPENAMES
#undef BRICKS_ARGLIST_FREE_TYPENAMES
#endif
#ifdef BRICKS_ARGLIST_FREE_TYPES
#undef BRICKS_ARGLIST_TYPES
#undef BRICKS_ARGLIST_FREE_TYPES
#endif
#ifdef BRICKS_ARGLIST_FREE_TYPES_NAMES
#undef BRICKS_ARGLIST_TYPES_NAMES
#undef BRICKS_ARGLIST_FREE_TYPES_NAMES
#endif
#ifdef BRICKS_ARGLIST_FREE_ARGS
#undef BRICKS_ARGLIST_ARGS
#undef BRICKS_ARGLIST_FREE_ARGS
#endif
#undef BRICKS_ARGLIST_ENUM_0
#undef BRICKS_ARGLIST_ENUM_1
#undef BRICKS_ARGLIST_ENUM_2
#undef BRICKS_ARGLIST_ENUM_3
#undef BRICKS_ARGLIST_ENUM_4
#undef BRICKS_ARGLIST_ENUM_5
#undef BRICKS_ARGLIST_ENUM_6
#undef BRICKS_ARGLIST_ENUM_7
#undef BRICKS_ARGLIST_ENUM_8
#undef BRICKS_ARGLIST_ENUM_9
